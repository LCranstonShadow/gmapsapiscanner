[project]
name = "gmapsapiscanner"
version = "1.0.0"
description = "Google Maps API Scanner - Tests Google Maps API keys for vulnerabilities"
authors = [
    { name = "Ozgur Alp", email = "you@example.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.8,<4.0"
dependencies = [
    "requests>=2.32.5"
]

[project.urls]
repository = "https://github.com/ozguralp/gmapsapiscanner"

[project.scripts]
gmapsapiscanner = "maps_api_scanner:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0"
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    -v
    --strict-markers
    --tb=short
    --cov=tests
    --cov-report=html
    --cov-report=xml
    --cov-report=term-missing:skip-covered
    --cov-fail-under=80
"""
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
]

[tool.coverage.run]
source = ["tests"]
omit = [
    "*/__pycache__/*",
    "*/venv/*",
    "*/virtualenv/*",
    "*/site-packages/*",
    "*/dist-packages/*",
    "*/.tox/*",
    "*/.coverage*",
    "*/htmlcov/*",
    "*/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
precision = 2
show_missing = true
skip_covered = false
fail_under = 80

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"